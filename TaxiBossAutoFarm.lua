do local OrionLib=loadstring(game:HttpGet("https://raw.githubusercontent.com/jensonhirst/Orion/main/source"))();if  not OrionLib then warn("Failed to load Orion UI library");return;end local function safeGetIcon(iconId) if  not iconId then return "";end local success,result=pcall(function() return tostring(iconId);end);return (success and result) or "" ;end local UserInputService=game:GetService("UserInputService");local RunService=game:GetService("RunService");local Players=game:GetService("Players");local Workspace=game:GetService("Workspace");local ReplicatedStorage=game:GetService("ReplicatedStorage");local LocalPlayer=Players.LocalPlayer;local PlayerGui=LocalPlayer:WaitForChild("PlayerGui",20);local isScriptLoaded=true;local ActiveQuestsFolder=LocalPlayer:FindFirstChild("ActiveQuests");local QuestsFolderRS=ReplicatedStorage:FindFirstChild("Quests");local ItemSpawnLocationsFolder=Workspace:FindFirstChild("ItemSpawnLocations");local ClaimQuestRemote=QuestsFolderRS and QuestsFolderRS:FindFirstChild("ClaimQuest") ;local function getCharacterComponents(player) player=player or LocalPlayer ;local char=player.Character;if  not char then return nil,nil,nil,nil,nil;end local hum=char:FindFirstChildOfClass("Humanoid");local root=char:FindFirstChild("HumanoidRootPart");local head=char:FindFirstChild("Head");local anim=hum and hum:FindFirstChildOfClass("Animator") ;if (hum and root and head and anim) then return char,hum,root,anim,head;end return nil,nil,nil,nil,nil;end local function isPlayerInVehicle(player) player=player or LocalPlayer ;if  not player then return false;end local character=player.Character;if  not character then return false;end local humanoid=character:FindFirstChildOfClass("Humanoid");if  not humanoid then return false;end local currentSeat=humanoid.SeatPart;if (currentSeat and currentSeat:IsA("VehicleSeat")) then return true,currentSeat;else return false,nil;end end local isEspEnabled=false;local espUpdateConnection=nil;local playerDrawings={};local espMaxDistance=500;local espTextSize=14;local espInfoColor=Color3.fromRGB(255,255,255);local espHeadOffset=2;local autoCollectEnabled=false;local collectLoopConnection=nil;local collectAttemptCooldown=1;local collectLastAttemptTimes={};local collectTeleportWait=0.1;local collectSpawnWait=0.05;local isCustomerEspEnabled=false;local customerEspUpdateConnection=nil;local customerDrawings={};local customerEspMaxDistance=500;local customerEspTextSize=14;local customerEspInfoColor=Color3.fromRGB(255,255,255);local customerEspRatingColors={[1]=Color3.fromRGB(255,0,0),[2]=Color3.fromRGB(255,100,0),[3]=Color3.fromRGB(255,200,0),[4]=Color3.fromRGB(200,255,0),[5]=Color3.fromRGB(100,255,0),[6]=Color3.fromRGB(0,255,0),[7]=Color3.fromRGB(0,255,100),[8]=Color3.fromRGB(0,255,200),[9]=Color3.fromRGB(0,200,255),[10]=Color3.fromRGB(0,100,255)};local customerEspWhitelist={enabled=false,minRating=1,maxRating=10,maxGroupSize=4,occupationFilter="",showAll=true};local isFlying=false;local currentFlySpeed=50;local flyToggleKey=Enum.KeyCode.E;local bodyGyro=nil;local bodyVelocity=nil;local flyAnimTrack=nil;local flyConnection=nil;local flyAnimation=Instance.new("Animation");flyAnimation.AnimationId="rbxassetid://180435571";local autoQuestEnabled=false;local questLoopConnection=nil;local questPrimaryMethod="ClaimQuest";local questAttemptCooldown=2;local questLastAttemptTimes={};local isAutoDriveEnabled=false;local autoDriveConnection=nil;local minRating=1;local maxRating=10;local maxGroupSize=4;local isInMission=false;local currentCustomer=nil;local currentDestination=nil;local VERTICAL_OFFSET=20;local pickupRange=10;local isAttemptingPickup=false;local lastMissionCheck=0;local MISSION_CHECK_RATE=0.5;local pathPoints={};local currentPathIndex=1;local MOVE_SPEED=0.8;local wheelRotationSpeed=5;local HOLD_R_DURATION=2;local MOVEMENT_PLATFORM=nil;local clickTeleportEnabled=false;local isTimeTrialEnabled=false;local isInRace=false;local currentLap=1;local timeTrialConnection=nil;local checkpoints={};local lastCheckpointTime=0;local CHECKPOINT_COOLDOWN=0.1;local TELEPORT_HEIGHT=3;local CHECKPOINT_DISTANCE=15;local RaceFolder=ReplicatedStorage:WaitForChild("Race",10);local JoinRaceRemote=RaceFolder and RaceFolder:WaitForChild("JoinRace") ;local TimeTrialRemote=RaceFolder and RaceFolder:WaitForChild("TimeTrial") ;local StartRaceEvent=RaceFolder and RaceFolder:WaitForChild("StartRace") ;local TimeTrialEndEvent=RaceFolder and RaceFolder:WaitForChild("TimeTrialEnd") ;local LeaveRaceRemote=RaceFolder and RaceFolder:WaitForChild("LeaveRace") ;local RaceNotificationEvent=RaceFolder and RaceFolder:WaitForChild("RaceNotification") ;local function safeGetRemote(name,timeout) local remote=RaceFolder:WaitForChild(name,timeout or 10 );if remote then return remote;else warn("Failed to find remote:",name);return nil;end end local function safeFireServer(remote,...) if  not remote then return false;end local success,result=pcall(function(...) remote:FireServer(...);end,...);if  not success then warn("Failed to fire remote:",remote.Name,result);return false;end return true;end function clearPlayerDrawings(player) if playerDrawings[player] then for _,drawingObject in pairs(playerDrawings[player]) do pcall(drawingObject.Remove,drawingObject);end playerDrawings[player]=nil;end end function clearAllDrawings() for player,_ in pairs(playerDrawings) do clearPlayerDrawings(player);end playerDrawings={};end function getHealthColor(health,maxHealth) local ratio=math.clamp(health/maxHealth ,0,1);return Color3.fromHSV(ratio * (120/360) ,1,1);end function updateEsp() if ( not isScriptLoaded or  not isEspEnabled) then return;end local Camera=Workspace.CurrentCamera;if  not Camera then return;end local _,_,localRoot,_,_=getCharacterComponents(LocalPlayer);if  not localRoot then return;end local currentPlayersOnScreen={};for _,player in ipairs(Players:GetPlayers()) do if (player~=LocalPlayer) then local TargetChar,TargetHum,TargetRoot,_,TargetHead=getCharacterComponents(player);local drawings=playerDrawings[player];if (TargetChar and TargetHum and (TargetHum.Health>0) and TargetRoot and TargetHead) then local targetRootPos=TargetRoot.Position;local distance=(localRoot.Position-targetRootPos).Magnitude;if (distance<=espMaxDistance) then local headPos=TargetHead.Position;local headScreenPos,headOnScreen=Camera:WorldToScreenPoint(headPos + Vector3.new(0,espHeadOffset,0) );if  not drawings then playerDrawings[player]={};drawings=playerDrawings[player];end currentPlayersOnScreen[player]=true;if  not drawings.NameText then drawings.NameText=Drawing.new("Text");end local nameDraw=drawings.NameText;if  not drawings.HealthText then drawings.HealthText=Drawing.new("Text");end local healthDraw=drawings.HealthText;if headOnScreen then nameDraw.Visible=true;nameDraw.Text=string.format("[%d] %s",math.floor(distance + 0.5 ),player.DisplayName);nameDraw.Color=espInfoColor;nameDraw.Size=espTextSize;nameDraw.Center=true;nameDraw.Position=Vector2.new(headScreenPos.X,headScreenPos.Y-20 );healthDraw.Visible=true;healthDraw.Text=math.floor(TargetHum.Health + 0.5 )   .. "/"   .. math.floor(TargetHum.MaxHealth + 0.5 ) ;healthDraw.Color=getHealthColor(TargetHum.Health,TargetHum.MaxHealth);healthDraw.Size=espTextSize;healthDraw.Center=true;healthDraw.Position=Vector2.new(headScreenPos.X,headScreenPos.Y-5 );else nameDraw.Visible=false;healthDraw.Visible=false;end else clearPlayerDrawings(player);end else clearPlayerDrawings(player);end end end for player,_ in pairs(playerDrawings) do if  not currentPlayersOnScreen[player] then clearPlayerDrawings(player);end end end function loadAnimationTrack() local Character,Humanoid,RootPart,Animator,Head=getCharacterComponents(LocalPlayer);if ( not isScriptLoaded or  not Animator or  not flyAnimation) then flyAnimTrack=nil;return;end if flyAnimTrack then pcall(flyAnimTrack.Stop,flyAnimTrack);flyAnimTrack=nil;end local success,result=pcall(function() flyAnimTrack=Animator:LoadAnimation(flyAnimation);end);if (success and flyAnimTrack) then flyAnimTrack.Looped=true;flyAnimTrack.Priority=Enum.AnimationPriority.Action;else warn("Failed to load fly animation:",result);flyAnimTrack=nil;end end function startFly() if ( not isScriptLoaded or isFlying) then return;end local Character,Humanoid,RootPart,Animator,Head=getCharacterComponents(LocalPlayer);if ( not Character or  not Humanoid or  not RootPart or  not Animator) then warn("Cannot start fly - Components missing");return;end isFlying=true;loadAnimationTrack();if  not bodyGyro then bodyGyro=Instance.new("BodyGyro",RootPart);end bodyGyro.P=10000;bodyGyro.D=500;bodyGyro.MaxTorque=Vector3.new(math.huge,math.huge,math.huge);bodyGyro.CFrame=RootPart.CFrame;if  not bodyVelocity then bodyVelocity=Instance.new("BodyVelocity",RootPart);end bodyVelocity.P=5000;bodyVelocity.MaxForce=Vector3.new(math.huge,math.huge,math.huge);bodyVelocity.Velocity=Vector3.new(0,0.1,0);if flyAnimTrack then pcall(flyAnimTrack.Play,flyAnimTrack,0.1);pcall(flyAnimTrack.AdjustSpeed,flyAnimTrack,1);end if  not flyConnection then flyConnection=RunService.RenderStepped:Connect(flyLoop);end end function stopFly() if ( not isScriptLoaded or  not isFlying) then return;end isFlying=false;if flyConnection then flyConnection:Disconnect();flyConnection=nil;end if bodyGyro then pcall(bodyGyro.Destroy,bodyGyro);bodyGyro=nil;end if bodyVelocity then pcall(bodyVelocity.Destroy,bodyVelocity);bodyVelocity=nil;end if flyAnimTrack then pcall(flyAnimTrack.Stop,flyAnimTrack,0.1);end end function flyLoop(deltaTime) if ( not isScriptLoaded or  not isFlying) then return;end local Character,Humanoid,RootPart,Animator,Head=getCharacterComponents(LocalPlayer);if ( not Character or  not Humanoid or (Humanoid:GetState()==Enum.HumanoidStateType.Dead) or  not RootPart) then stopFly();return;end local Camera=workspace.CurrentCamera;if  not Camera then return;end local moveDirection=Vector3.new(0,0,0);if UserInputService:IsKeyDown(Enum.KeyCode.W) then moveDirection=moveDirection + Camera.CFrame.LookVector ;end if UserInputService:IsKeyDown(Enum.KeyCode.S) then moveDirection=moveDirection-Camera.CFrame.LookVector ;end if UserInputService:IsKeyDown(Enum.KeyCode.A) then moveDirection=moveDirection-Camera.CFrame.RightVector ;end if UserInputService:IsKeyDown(Enum.KeyCode.D) then moveDirection=moveDirection + Camera.CFrame.RightVector ;end if UserInputService:IsKeyDown(Enum.KeyCode.Space) then moveDirection=moveDirection + Vector3.new(0,1,0) ;end if (UserInputService:IsKeyDown(Enum.KeyCode.LeftShift) or UserInputService:IsKeyDown(Enum.KeyCode.RightShift)) then moveDirection=moveDirection-Vector3.new(0,1,0) ;end local targetVelocity=Vector3.new(0,0.05,0);if (moveDirection.Magnitude>0.01) then targetVelocity=moveDirection.Unit * currentFlySpeed ;end if bodyVelocity then bodyVelocity.Velocity=targetVelocity;end if bodyGyro then local lookDir=Camera.CFrame.LookVector;local lookTarget=RootPart.Position + Vector3.new(lookDir.X,0,lookDir.Z).Unit ;if ((lookTarget-RootPart.Position).Magnitude>0.1) then pcall(function() bodyGyro.CFrame=CFrame.new(RootPart.Position,lookTarget);end);end end end function autoQuestLoop(dt) if ( not isScriptLoaded or  not autoQuestEnabled or  not ActiveQuestsFolder) then return;end local currentTime=tick();for _,questInstance in ipairs(ActiveQuestsFolder:GetChildren()) do if  not questInstance:IsA("StringValue") then continue;end local questId=questInstance.Name;if (questInstance:GetAttribute("completed") or false or questInstance:GetAttribute("finished") or false) then continue;end local lastAttempt=questLastAttemptTimes[questId] or 0 ;if ((currentTime-lastAttempt)<questAttemptCooldown) then continue;end questLastAttemptTimes[questId]=currentTime;if (questPrimaryMethod=="ClaimQuest") then if (ClaimQuestRemote and ClaimQuestRemote:IsA("RemoteFunction")) then local success,result=pcall(ClaimQuestRemote.InvokeServer,ClaimQuestRemote,questId);if success then print("Quest claimed:",questId);else warn("Failed to claim quest:",result);end end elseif (questPrimaryMethod=="SetAttributes") then local s1,e1=pcall(questInstance.SetAttribute,questInstance,"completed",true);local s2,e2=pcall(questInstance.SetAttribute,questInstance,"finished",true);if ( not s1 or  not s2) then warn("Failed to set quest attributes:",e1 or e2 );end end task.wait(0.1);end end function autoCollectLoop() if ( not isScriptLoaded or  not autoCollectEnabled or  not ItemSpawnLocationsFolder) then return;end local currentTime=tick();local Character,Humanoid,RootPart=getCharacterComponents(LocalPlayer);if ( not RootPart or  not Humanoid or (Humanoid.Health<=0)) then return;end local originalCFrame=RootPart.CFrame;for _,spawnerInstance in ipairs(ItemSpawnLocationsFolder:GetChildren()) do local itemsToAttempt={};task.wait(collectSpawnWait);if (spawnerInstance:IsA("Model") or spawnerInstance:IsA("Folder") or spawnerInstance:IsA("BasePart")) then for _,potentialItemModel in ipairs(spawnerInstance:GetChildren()) do if potentialItemModel:IsA("Model") then local touchPart=potentialItemModel:FindFirstChild("TouchPart");if (touchPart and touchPart:IsA("BasePart")) then local tpCFrame=touchPart.CFrame;if tpCFrame then table.insert(itemsToAttempt,{instance=touchPart,cframe=tpCFrame});break;end end end end end if ( #itemsToAttempt>0) then local itemData=itemsToAttempt[1];local touchPartInstance=itemData.instance;local itemCFrame=itemData.cframe;local itemIdentifier=touchPartInstance:GetFullName();local lastAttempt=collectLastAttemptTimes[itemIdentifier] or 0 ;if ((currentTime-lastAttempt)>=collectAttemptCooldown) then collectLastAttemptTimes[itemIdentifier]=currentTime;local targetCFrame=itemCFrame * CFrame.new(0,2.5,0) ;local teleportSuccess=false;local tp1Success,tp1Err=pcall(function() RootPart.CFrame=targetCFrame;end);if tp1Success then task.wait(collectTeleportWait);local tp2Success,tp2Err=pcall(function() RootPart.CFrame=originalCFrame;end);if tp2Success then teleportSuccess=true;else warn("Teleport back failed:",tp2Err);pcall(function() RootPart.CFrame=originalCFrame;end);end else warn("Initial teleport failed:",tp1Err);pcall(function() RootPart.CFrame=originalCFrame;end);end if teleportSuccess then print("Item collected:",itemIdentifier);end task.wait(0.2);originalCFrame=RootPart.CFrame;end end task.wait(0.01);end end function clearCustomerDrawings(customer) if customerDrawings[customer] then for _,drawingObject in pairs(customerDrawings[customer]) do pcall(drawingObject.Remove,drawingObject);end customerDrawings[customer]=nil;end end function clearAllCustomerDrawings() for customer,_ in pairs(customerDrawings) do clearCustomerDrawings(customer);end customerDrawings={};end function updateCustomerEsp() if ( not isScriptLoaded or  not isCustomerEspEnabled) then return;end local Camera=Workspace.CurrentCamera;if  not Camera then return;end local _,_,localRoot,_,_=getCharacterComponents(LocalPlayer);if  not localRoot then return;end local currentCustomersOnScreen={};local customersContainer=Workspace:FindFirstChild("NewCustomers");if  not customersContainer then return;end local function processCustomer(customer) if ( not customer:IsA("Model") and  not customer:IsA("BasePart")) then return;end local customerPart=(customer:IsA("Model") and customer:FindFirstChild("Part")) or customer ;if  not customerPart then return;end local rating=customerPart:GetAttribute("Rating");local groupSize=customerPart:GetAttribute("GroupSize");local customerType=customerPart:GetAttribute("Type") or "Customer" ;if ( not rating or  not groupSize) then return;end if customerEspWhitelist.enabled then if ((rating<customerEspWhitelist.minRating) or (rating>customerEspWhitelist.maxRating)) then return;end if (groupSize>customerEspWhitelist.maxGroupSize) then return;end if (customerEspWhitelist.occupationFilter~="") then if  not customerType:lower():find(customerEspWhitelist.occupationFilter) then return;end end end local customerPos=customerPart.Position;local distance=(localRoot.Position-customerPos).Magnitude;if (distance<=customerEspMaxDistance) then local screenPos,onScreen=Camera:WorldToScreenPoint(customerPos + Vector3.new(0,2,0) );if  not customerDrawings[customer] then customerDrawings[customer]={};end local drawings=customerDrawings[customer];if  not drawings.RatingText then drawings.RatingText=Drawing.new("Text");end local ratingDraw=drawings.RatingText;if  not drawings.GroupSizeText then drawings.GroupSizeText=Drawing.new("Text");end local groupSizeDraw=drawings.GroupSizeText;if  not drawings.TypeText then drawings.TypeText=Drawing.new("Text");end local typeDraw=drawings.TypeText;currentCustomersOnScreen[customer]=true;if onScreen then ratingDraw.Visible=true;ratingDraw.Text="⭐ "   .. tostring(rating) ;ratingDraw.Color=customerEspRatingColors[math.floor(rating + 0.5 )] or customerEspInfoColor ;ratingDraw.Size=customerEspTextSize;ratingDraw.Center=true;ratingDraw.Position=Vector2.new(screenPos.X,screenPos.Y-40 );groupSizeDraw.Visible=true;groupSizeDraw.Text="👥 "   .. tostring(groupSize) ;groupSizeDraw.Color=customerEspInfoColor;groupSizeDraw.Size=customerEspTextSize;groupSizeDraw.Center=true;groupSizeDraw.Position=Vector2.new(screenPos.X,screenPos.Y-20 );typeDraw.Visible=true;typeDraw.Text="📋 "   .. customerType ;typeDraw.Color=customerEspInfoColor;typeDraw.Size=customerEspTextSize;typeDraw.Center=true;typeDraw.Position=Vector2.new(screenPos.X,screenPos.Y);else ratingDraw.Visible=false;groupSizeDraw.Visible=false;typeDraw.Visible=false;end else clearCustomerDrawings(customer);end end for _,customer in ipairs(customersContainer:GetDescendants()) do processCustomer(customer);end for customer,_ in pairs(customerDrawings) do if  not currentCustomersOnScreen[customer] then clearCustomerDrawings(customer);end end end function timeTrialLoop() if  not isTimeTrialEnabled then return;end local inVehicle,currentSeat=isPlayerInVehicle(LocalPlayer);if  not inVehicle then return;end local racesFolder=Workspace:FindFirstChild("Races");if  not racesFolder then return;end if  not isInRace then local raceModel=racesFolder:FindFirstChild("TimeTrial") or racesFolder:FindFirstChild("Race") ;if  not raceModel then return;end if JoinRaceRemote then safeFireServer(JoinRaceRemote,raceModel);task.wait(0.5);if TimeTrialRemote then safeFireServer(TimeTrialRemote);task.wait(0.5);if StartRaceEvent then safeFireServer(StartRaceEvent);isInRace=true;checkpoints=getCheckpoints();task.wait(0.5);end end end return;end local currentTime=tick();if ((currentTime-lastCheckpointTime)<CHECKPOINT_COOLDOWN) then return;end for _,checkpoint in ipairs(checkpoints) do if checkpoint.Wall then local distance=(currentSeat.Position-checkpoint.Position).Magnitude;if (distance>CHECKPOINT_DISTANCE) then if safeTeleport(checkpoint.Position) then lastCheckpointTime=currentTime;task.wait(0.1);break;end end end end local lastCheckpoint=checkpoints[ #checkpoints];if (lastCheckpoint and lastCheckpoint.Wall) then local distance=(currentSeat.Position-lastCheckpoint.Position).Magnitude;if (distance<CHECKPOINT_DISTANCE) then completeRace();end end end local Window=OrionLib:MakeWindow({Name="Crsh Hub v9",HidePremium=false,SaveConfig=true,ConfigFolder="CrshConfig"});local MainTab=Window:MakeTab({Name="Main",Icon="rbxassetid://4483345998",PremiumOnly=false});local VisualsTab=Window:MakeTab({Name="Visuals",Icon="rbxassetid://4483345998"});local CollectTab=Window:MakeTab({Name="Collector",Icon="rbxassetid://1307701499"});local SettingsTab=Window:MakeTab({Name="Settings",Icon="rbxassetid://4483345998"});local MovementSection=MainTab:AddSection({Name="Movement"});MovementSection:AddToggle({Name="Fly",Default=false,Callback=function(v) if v then startFly();else stopFly();end end});MovementSection:AddSlider({Name="Fly Speed",Min=0,Max=500,Default=currentFlySpeed,Suffix=" studs/s",Increment=5,Callback=function(v) currentFlySpeed=v;end});MovementSection:AddBind({Name="Fly Toggle Keybind",Default=flyToggleKey,Hold=false,Callback=function() if UserInputService:GetFocusedTextBox() then return;end if isFlying then stopFly();else startFly();end end});MovementSection:AddToggle({Name="Click Teleport",Default=false,Callback=function(v) clickTeleportEnabled=v;end});local TimeTrialSection=MainTab:AddSection({Name="Time Trial Controls"});local selectedLaps=1;local autoFarmRunning=false;local stopAutoFarm=false;TimeTrialSection:AddDropdown({Name="Number of Laps",Default="1",Options={"1","2","5"},Callback=function(Value) selectedLaps=tonumber(Value);end});TimeTrialSection:AddToggle({Name="AutoTrophyFarm",Default=false,Callback=function(Value) if Value then autoFarmRunning=true;stopAutoFarm=false;getgenv().AmountOfLaps=selectedLaps;getgenv().StopAutoFarm=function() stopAutoFarm=true;autoFarmRunning=false;local RaceFolder=game:GetService("ReplicatedStorage"):FindFirstChild("Race");if RaceFolder then local LeaveRaceRemote=RaceFolder:FindFirstChild("LeaveRace");if LeaveRaceRemote then LeaveRaceRemote:FireServer();end end end;loadstring(game:HttpGet("https://rawscripts.net/raw/Taxi-Boss-Time-Trial-Autofarm-4722"))();spawn(function() while autoFarmRunning and  not stopAutoFarm  do task.wait(0.1);end if stopAutoFarm then getgenv().StopAutoFarm();end end);elseif getgenv().StopAutoFarm then getgenv().StopAutoFarm();end end});local PlayerEspSection=VisualsTab:AddSection({Name="Player ESP"});local CustomerEspSection=VisualsTab:AddSection({Name="Customer ESP"});PlayerEspSection:AddToggle({Name="Player ESP",Default=false,Callback=function(v) isEspEnabled=v;if isEspEnabled then if  not espUpdateConnection then espUpdateConnection=RunService.RenderStepped:Connect(updateEsp);end else if espUpdateConnection then espUpdateConnection:Disconnect();espUpdateConnection=nil;end clearAllDrawings();end end});PlayerEspSection:AddSlider({Name="ESP Max Distance",Min=50,Max=1500,Default=espMaxDistance,Increment=25,Suffix=" studs",Callback=function(v) espMaxDistance=v;end});CustomerEspSection:AddToggle({Name="Customer ESP",Default=false,Callback=function(v) isCustomerEspEnabled=v;if isCustomerEspEnabled then if  not customerEspUpdateConnection then customerEspUpdateConnection=RunService.RenderStepped:Connect(updateCustomerEsp);end else if customerEspUpdateConnection then customerEspUpdateConnection:Disconnect();customerEspUpdateConnection=nil;end clearAllCustomerDrawings();end end});CustomerEspSection:AddSlider({Name="ESP Max Distance",Min=50,Max=1500,Default=customerEspMaxDistance,Increment=25,Suffix=" studs",Callback=function(v) customerEspMaxDistance=v;end});CustomerEspSection:AddToggle({Name="Enable Whitelist",Default=false,Callback=function(v) customerEspWhitelist.enabled=v;end});CustomerEspSection:AddSlider({Name="Minimum Rating",Min=1,Max=10,Default=1,Increment=0.5,Callback=function(v) customerEspWhitelist.minRating=v;end});CustomerEspSection:AddSlider({Name="Maximum Rating",Min=1,Max=10,Default=10,Increment=0.5,Callback=function(v) customerEspWhitelist.maxRating=v;end});CustomerEspSection:AddSlider({Name="Max Group Size",Min=1,Max=10,Default=4,Increment=1,Callback=function(v) customerEspWhitelist.maxGroupSize=v;end});CustomerEspSection:AddTextbox({Name="Occupation Filter",Default="",TextDisappear=false,Callback=function(v) customerEspWhitelist.occupationFilter=v:lower();end});local CollectSection=CollectTab:AddSection({Name="Auto Item Collector"});CollectSection:AddToggle({Name="Enable Auto Collect",Default=false,Callback=function(v) autoCollectEnabled=v;if autoCollectEnabled then if  not collectLoopConnection then collectLoopConnection=RunService.Heartbeat:Connect(autoCollectLoop);end elseif collectLoopConnection then collectLoopConnection:Disconnect();collectLoopConnection=nil;end end});local SettingsSection=SettingsTab:AddSection({Name="Script Settings"});SettingsSection:AddButton({Name="Unload Script",Callback=function() isScriptLoaded=false;stopFly();if flyConnection then flyConnection:Disconnect();end if espUpdateConnection then espUpdateConnection:Disconnect();espUpdateConnection=nil;end clearAllDrawings();if customerEspUpdateConnection then customerEspUpdateConnection:Disconnect();customerEspUpdateConnection=nil;end clearAllCustomerDrawings();if collectLoopConnection then collectLoopConnection:Disconnect();collectLoopConnection=nil;end if timeTrialConnection then timeTrialConnection:Disconnect();timeTrialConnection=nil;end if Window then Window:Destroy();end OrionLib=nil;getgenv().OrionLib=nil;end});OrionLib:Init();print("Crsh Hub Full Suite v9: Script loaded successfully");LocalPlayer.CharacterAdded:Connect(function(newCharacter) if  not isScriptLoaded then return;end if isFlying then stopFly();end task.wait(0.3);loadAnimationTrack();end);Players.PlayerRemoving:Connect(function(player) if  not isScriptLoaded then return;end clearPlayerDrawings(player);end);local function checkMissionState() local success,result=pcall(function() return LocalPlayer.variables.inMission;end);if success then isInMission=result;else isInMission=false;end end RunService.Heartbeat:Connect(function() if isAutoDriveEnabled then checkMissionState();end end);local function teleportVehicle(targetPos) local inVehicle,currentSeat=isPlayerInVehicle(LocalPlayer);if ( not inVehicle or  not currentSeat) then return false;end local vehicleModel=currentSeat:FindFirstAncestorWhichIsA("Model");if  not vehicleModel then return false;end if  not vehicleModel.PrimaryPart then local chassis=vehicleModel:FindFirstChild("CHASSIS") or vehicleModel:FindFirstChild("Chassis") ;if (chassis and chassis:IsA("BasePart")) then vehicleModel.PrimaryPart=chassis;else for _,part in pairs(vehicleModel:GetDescendants()) do if (part:IsA("BasePart") and  not part:IsA("VehicleSeat")) then vehicleModel.PrimaryPart=part;break;end end end end if  not vehicleModel.PrimaryPart then return false;end local function getConnectedModels(model) local connected={};for _,part in ipairs(model:GetDescendants()) do if part:IsA("BasePart") then for _,connectedPart in ipairs(part:GetConnectedParts()) do local connectedModel=connectedPart:FindFirstAncestorWhichIsA("Model");if (connectedModel and (connectedModel~=model) and  not connected[connectedModel]) then connected[connectedModel]=true;end end end end return connected;end local currentRotation=vehicleModel.PrimaryPart.CFrame.Rotation;local targetCFrame=CFrame.new(targetPos) * currentRotation ;vehicleModel:SetPrimaryPartCFrame(targetCFrame);local connectedModels=getConnectedModels(vehicleModel);for connectedModel in pairs(connectedModels) do if connectedModel.PrimaryPart then local offset=connectedModel.PrimaryPart.CFrame:ToObjectSpace(targetCFrame);connectedModel:SetPrimaryPartCFrame(targetCFrame * offset );end end return true;end UserInputService.InputBegan:Connect(function(input,gameProcessed) if ( not isScriptLoaded or  not clickTeleportEnabled) then return;end if gameProcessed then return;end if ((input.UserInputType==Enum.UserInputType.MouseButton1) and UserInputService:IsKeyDown(Enum.KeyCode.LeftControl)) then local mouse=LocalPlayer:GetMouse();local camera=workspace.CurrentCamera;if  not camera then return;end local ray=camera:ScreenPointToRay(mouse.X,mouse.Y);local raycastParams=RaycastParams.new();raycastParams.FilterType=Enum.RaycastFilterType.Blacklist;raycastParams.FilterDescendantsInstances={LocalPlayer.Character};local raycastResult=workspace:Raycast(ray.Origin,ray.Direction * 1000 ,raycastParams);if (raycastResult and raycastResult.Position) then local targetPos=raycastResult.Position + Vector3.new(0,3,0) ;local inVehicle=isPlayerInVehicle(LocalPlayer);if inVehicle then teleportVehicle(targetPos);else local Character,Humanoid,RootPart=getCharacterComponents(LocalPlayer);if RootPart then RootPart.CFrame=CFrame.new(targetPos);end end end end end);local function getClosestCheckpoint(position) local closest=nil;local minDistance=math.huge;for i,checkpoint in ipairs(checkpoints) do if (checkpoint.Model and checkpoint.Wall) then local wall=checkpoint.Wall;local distance=(wall.Position-position).Magnitude;if (distance<minDistance) then minDistance=distance;closest={index=i,checkpoint=checkpoint};end end end return closest;end local function updateCheckpointColor(checkpoint,completed) if (checkpoint and checkpoint.Wall) then checkpoint.Wall.BrickColor=(completed and BrickColor.new("Institutional white")) or BrickColor.new("Gold") ;end end RaceNotificationEvent.OnClientEvent:Connect(function(raceInfo,playerInfo) print("Received race notification:");print("Race info:",raceInfo and raceInfo.Name );print("Player info:",playerInfo and playerInfo.Name );end);local function initializeCheckpoints() checkpoints={};local racesFolder=Workspace:FindFirstChild("Races");if  not racesFolder then return;end for _,checkpoint in ipairs(racesFolder:GetDescendants()) do if (checkpoint:IsA("Model") and checkpoint.Name:match("^checkpoint")) then local wall=checkpoint:FindFirstChild("Wall");if wall then table.insert(checkpoints,{Model=checkpoint,Wall=wall,Position=wall.Position,Completed=false});end end end table.sort(checkpoints,function(a,b) return a.Position.Y<b.Position.Y ;end);end local function handleCheckpoint(checkpoint) if ( not checkpoint or  not checkpoint.Wall) then return;end local currentTime=tick();if ((currentTime-lastCheckpointTime)<CHECKPOINT_COOLDOWN) then return;end lastCheckpointTime=currentTime;checkpoint.Wall.BrickColor=BrickColor.new("Institutional white");checkpoint.Completed=true;local nextCheckpoint=nil;for i,cp in ipairs(checkpoints) do if  not cp.Completed then nextCheckpoint=cp;break;end end if nextCheckpoint then teleportVehicle(nextCheckpoint.Position + Vector3.new(0,3,0) );else local finishPart=Workspace:FindFirstChild("Races"):FindFirstChild("Finish");if finishPart then teleportVehicle(finishPart.Position + Vector3.new(0,3,0) );task.wait(1);if TimeTrialEndEvent then safeFireServer(TimeTrialEndEvent);task.wait(1);end if LeaveRaceRemote then safeFireServer(LeaveRaceRemote);end for _,cp in ipairs(checkpoints) do cp.Completed=false;if cp.Wall then cp.Wall.BrickColor=BrickColor.new("Gold");end end isInRace=false;currentLap=1;end end end local function getCheckpoints() local racesFolder=Workspace:FindFirstChild("Races");if  not racesFolder then return {};end local checkpoints={};for _,obj in ipairs(racesFolder:GetDescendants()) do if (obj:IsA("Model") and obj.Name:match("^checkpoint")) then local wall=obj:FindFirstChild("Wall");if wall then table.insert(checkpoints,{Model=obj,Wall=wall,Position=wall.Position});end end end table.sort(checkpoints,function(a,b) local numA=tonumber(a.Model.Name:match("%d+")) or 0 ;local numB=tonumber(b.Model.Name:match("%d+")) or 0 ;return numA<numB ;end);return checkpoints;end local function safeTeleport(position) local inVehicle,currentSeat=isPlayerInVehicle(LocalPlayer);if ( not inVehicle or  not currentSeat) then return false;end local vehicle=currentSeat:FindFirstAncestorWhichIsA("Model");if  not vehicle then return false;end if  not vehicle.PrimaryPart then local chassis=vehicle:FindFirstChild("CHASSIS") or vehicle:FindFirstChild("Chassis") ;if (chassis and chassis:IsA("BasePart")) then vehicle.PrimaryPart=chassis;end end if  not vehicle.PrimaryPart then return false;end local currentRotation=vehicle.PrimaryPart.CFrame.Rotation;local targetCFrame=CFrame.new(position + Vector3.new(0,TELEPORT_HEIGHT,0) ) * currentRotation ;local success,err=pcall(function() vehicle:SetPrimaryPartCFrame(targetCFrame);end);return success;end local function completeRace() if  not isInRace then return;end local racesFolder=Workspace:FindFirstChild("Races");if  not racesFolder then return;end local finishPart=racesFolder:FindFirstChild("Finish");if finishPart then safeTeleport(finishPart.Position);task.wait(0.5);if TimeTrialEndEvent then safeFireServer(TimeTrialEndEvent);task.wait(0.5);end if LeaveRaceRemote then safeFireServer(LeaveRaceRemote);end isInRace=false;end end end
